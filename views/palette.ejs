<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/js/cookie.js"></script>
    <script> checkCookie()</script>
    <title>Palette Picker</title>
    <link rel="stylesheet" href="/css/desktop.css">
</head>

<body>

    <div class="container">
        <div class="navbar">
            <div class="leftnav">
                <nav>
                    <div class="gradient">
                        <a href="/">Hue</a>
                    </div>
                </nav>
            </div>
            <div class="midnav">
                <nav>
                    <ul class="nav-menu">
                        <li><a href="/" class="nav-link">Home</a></li>
                        <li><a href="/palette" class="nav-link">Palette Picker</a></li>
                        <li><a href="/about" class="nav-link">About</a></li>
                        <li><a href="/profile" class="nav-link">Profile</a></li>
                        <li><a href="/login" class="nav-link">Login</a></li>
                        <li><a href="/register" class="nav-link">Sign Up</a></li>
                    </ul>
                </nav>
            </div>
            <div class="hamburger">
                <span class="bar"></span>
                <span class="bar"></span>
                <span class="bar"></span>
            </div>
        </div>

        <div class="colourContainer">
            <div class="colourPicker">
                <div id="outputs"> </div>


                <!-- range slider -->
                <div class="wrapper">
                    <label class="wrapperLabel">Red</label><input type="range" min="0" max="255" value="0" id="red" oninput="colors()">
                    <label class="wrapperLabel">Green</label><input type="range" min="0" max="255" value="0" id="green" oninput="colors()">
                    <label class="wrapperLabel">Blue</label><input type="range" min="0" max="255" value="0" id="blue" oninput="colors()">
                </div>

                <!-- colour code output-->
                <div class="colourOutput">
                    <span id="output">rgb(0, 0, 0)</span>
                    <span id="hexOutput">hex(#000000)</span>
                </div>

                <div class="checkbox-group">
                    <label class="lbl"><input class="i" type="checkbox" id="monochromaticCheckbox" oninput="checkboxChecker()"> Monochromatic</label>
                    <label class="lbl"><input class="i" type="checkbox" id="complementaryCheckbox" oninput="checkboxChecker()"> Complementary</label>
                    <label class="lbl"><input class="i" type="checkbox" id="analogousCheckbox" oninput="checkboxChecker()"> Analogous</label>
                    <label class="lbl"><input class="i" type="checkbox" id="splitCheckbox" oninput="checkboxChecker()"> Split</label>
                </div>
               <button class="paletteGenBtn" onclick="generatePalettes()">Generate Palette</button>
                <button class="resetBtn" onclick="resetColors()">Reset</button>
            </div>
            <div class="divPaletteContainer">
                <div class="monochromatic">
                    <h2 class="paletteh2">Monochromatic</h2>
                    <div class="palette-container" id="paletteContainer"></div>
                    <button class="savePaletteBtn" id="monoBtn" onclick="">Save Palette</button> 
                </div>
                <div class="complementary">
                    <h2 class="paletteh2">Complementary</h2>
                    <div class="complementaryContainer" id="complementary"></div>
                    <button class="savePaletteBtn" id="compBtn" onclick="">Save Palette</button>
                </div>
                <div class="analogous">
                    <h2 class="paletteh2">Analogous</h2>
                    <div class="analogousContainer" id="analogous"></div>
                    <button class="savePaletteBtn" id="analogousBtn" onclick="">Save Palette</button> 
                </div>
                <div class="random">
                    <h2 class="paletteh2">Split</h2>
                    <div class="splitContainer" id="split"></div>
                    <button class="savePaletteBtn" id="splitBtn" onclick=""n>Save Palette</button> 
                </div>
            </div>
        </div>
    </div>
    <script src="/js/colourPicker.js"></script>
    <script> 
        // add function in separate JS file to avoid repeating code for each button - type and name passed in already?
        const button = document.getElementById("monoBtn")
        button.addEventListener("click", async event => {
            try {     
                let namePrompt = prompt ("Please enter a name for your palette")
                if (namePrompt == null) {
                    return; // breaks out of the function if they click cancel
                }
                let hex = document.getElementById('hexOutput').innerHTML;
                let hexSplit = hex.slice(4,11)
                const body = { hexCode: hexSplit, paletteType: "monochromatic", name: namePrompt}
                if (!body.paletteType || !body.hexCode || body.hexCode.length > 7) {
                    alert("Internal server error.")
                    return;
                }
                if (!body.name.trim()) {
                    alert("Please ensure you provide a name.")
                    return;
                }
                const namePattern = /[^A-Za-z0-9\s]/;
                if (namePattern.test(body.name) || body.name.length > 20) {
                    alert("Please ensure you provide a name that contains only letters and numbers and is less than 20 characters long.")
                    return;
                }
                const jsonBody = JSON.stringify(body);
                const response = await fetch('/palette', {
                    method: 'POST',
                    headers: {"Content-Type": "application/json"},
                    body: `${jsonBody}`
                })
                .then(response => {
                    // console.log(response)
                    if (response.ok) {
                        alert("Saved to database")
                        setTimeout(function() {
                            window.location.reload()
                        }, 1500);
                        return response.json();
                    } 
                })
                .then(data => {
                // logs data passed into database in console
                    // console.log(data)
                    // delays page reload by 1.5 seconds
                })
            }
            catch(err) {
                console.error('Error:', err);
            }
        }); 
    </script>
    <script src="/js/hamburger.js"></script>

</body>

</html>